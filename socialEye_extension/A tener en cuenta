_No deberiamos acceder a ningun elemento en los widgets buscandolos con JQuery puro o con getElementById. Siempre usar widget.getWidgetElement(selector)

_El find() de JQuery que a veces usamos, devuelve un arreglo con los elementos encontrados (por más que sea uno solo el que corresponda). Por eso modifiqué el getWidgetElement agregandole al final [0] para que devuelva el primer objeto del arreglo (tenia problemas de referencia si quería tratar directamente como elemento del dom a lo que me devolvia la funcion).

_Para los widgets de comentarios, no tenemos una sincronización en tiempo real de los mismos con la base. De esta forma, si una persona está agregando un comentario a una web (o creando uno especifico), no lo estaría visualizando el usuario (debería recargar o el widget o la página). Deberiamos hacer en cada widget un pedazo de código con un interval que actualice la información que visualizan los widgets, con la de la base. 

_Hacer varios casos de prueba por algunas fallas que se dan cada tanto.

_Evaluar si dejar así o con templates los boxes de Login, Registro y Configuraciones.

_Habría que organizar los css propios (que hacen al diseño de la herramienta) en un archivo solo.

_Creo que no tiene sentido setear los atributos del objeto widget desde el código si los pedimos al momento de subirlo a la web (por lo menos los de title y description). Ver si se justifica tener el atributo title, me parece medio al pedo ahora con lo de los templates.

_Ver (de ser necesario), como hacemos con el widget de usuarios y chats, el cual necesita del server de webRTC para funcionar.

_Para ir teniendo en cuenta para el manual de usuario: 

	*Aclarar a los desarrolladores que SIEMPRE deben llamar al close() del widget en algún momento. Esto porque al crear templates individuales, ninguno le da el "cierre completo" al widget (lo cual se puede ver cuando se deshabilita el brillo en el ícono del widget).
	*Explicar bien el funcionamiento de widget.getWidgetElement(selector).